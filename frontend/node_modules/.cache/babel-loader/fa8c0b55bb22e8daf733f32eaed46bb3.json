{"ast":null,"code":"import _regeneratorRuntime from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/src/components/style/BoxNewItem.js\";\nimport React, { Component } from 'react';\nimport { PostData } from '../../services/Methods/API';\nimport serializeForm from 'form-serialize';\nimport { BoxInput } from './BoxInput';\n\nvar BoxNewItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BoxNewItem, _Component);\n\n  function BoxNewItem() {\n    var _this;\n\n    _classCallCheck(this, BoxNewItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BoxNewItem).call(this));\n\n    _this.handleError = function () {};\n\n    _this.handle =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var formData, save;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                formData = serializeForm(event.target, {\n                  hash: true\n                });\n                _context.next = 4;\n                return PostData(formData);\n\n              case 4:\n                save = _context.sent;\n\n                if (!(save.status === \"success\")) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _this.props.newItem(save.data);\n\n                return _context.abrupt(\"return\");\n\n              case 8:\n                if (save.status === \"fail\") {}\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      list: [],\n      errorAdd: \"\"\n    };\n    _this.handle = _this.handle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BoxNewItem, [{\n    key: \"render\",\n    value: function render() {\n      var errorAdd = this.state.errorAdd;\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(BoxInput, {\n        btnDescription: \"Adicionar\",\n        buttonType: \"btn-success\",\n        handleForm: this.handle,\n        description: \"Adicionar CPF/CNPJ\",\n        placeholderDescription: \"Informe um CPF/CNPJ para cadastro\",\n        errorMsg: errorAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BoxNewItem;\n}(Component);\n\nexport default BoxNewItem;","map":{"version":3,"sources":["/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/src/components/style/BoxNewItem.js"],"names":["React","Component","PostData","serializeForm","BoxInput","BoxNewItem","handleError","handle","event","preventDefault","formData","target","hash","save","status","props","newItem","data","state","list","errorAdd","bind"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,4BAAzB;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,QAAT,QAAyB,YAAzB;;IAEMC,U;;;;;AACF,wBAAc;AAAA;;AAAA;;AACZ;;AADY,UAUdC,WAVc,GAUA,YAAM,CAEnB,CAZa;;AAAA,UAcdC,MAdc;AAAA;AAAA;AAAA;AAAA;AAAA,+BAcL,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACLA,gBAAAA,KAAK,CAACC,cAAN;AACMC,gBAAAA,QAFD,GAEYP,aAAa,CAACK,KAAK,CAACG,MAAP,EAAe;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAf,CAFzB;AAAA;AAAA,uBAGcV,QAAQ,CAACQ,QAAD,CAHtB;;AAAA;AAGCG,gBAAAA,IAHD;;AAAA,sBAKDA,IAAI,CAACC,MAAL,KAAc,SALb;AAAA;AAAA;AAAA;;AAMD,sBAAKC,KAAL,CAAWC,OAAX,CAAmBH,IAAI,CAACI,IAAxB;;AANC;;AAAA;AAWL,oBAAIJ,IAAI,CAACC,MAAL,KAAc,MAAlB,EAA0B,CAEzB;;AAbI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAdK;;AAAA;AAAA;AAAA;AAAA;;AAEZ,UAAKI,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,EADM;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAKA,UAAKb,MAAL,GAAc,MAAKA,MAAL,CAAYc,IAAZ,uDAAd;AAPY;AAQb;;;;6BAsBQ;AAAA,UACGD,QADH,GACgB,KAAKF,KADrB,CACGE,QADH;AAEL,aAAO;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AACI,QAAA,cAAc,EAAG,WADrB;AAEI,QAAA,UAAU,EAAG,aAFjB;AAGI,QAAA,UAAU,EAAI,KAAKb,MAHvB;AAII,QAAA,WAAW,EAAG,oBAJlB;AAKI,QAAA,sBAAsB,EAAG,mCAL7B;AAMI,QAAA,QAAQ,EAAIa,QANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADL,CAAP;AAsCH;;;;EAvEoBnB,S;;AA0EzB,eAAeI,UAAf","sourcesContent":["import React, { Component }  from 'react';\nimport { PostData } from '../../services/Methods/API';\n\nimport serializeForm from 'form-serialize';\nimport { BoxInput } from './BoxInput';\n\nclass BoxNewItem extends Component {\n    constructor() {\n      super();\n      this.state = {\n        list:[],\n        errorAdd: \"\",\n      }\n\n      this.handle = this.handle.bind(this);\n    }\n\n    handleError = () => {\n        \n    }\n    \n    handle = async (event) => {\n        event.preventDefault();\n        const formData = serializeForm(event.target, { hash: true })\n        const save = await PostData(formData);\n    \n        if (save.status===\"success\") {\n            this.props.newItem(save.data)\n\n            return ;\n        }\n\n        if (save.status===\"fail\") {\n\n        }\n    }\n\n    render() {\n        const { errorAdd } = this.state\n        return <div className=\"row\">\n                    <div className=\"col-6\">\n                        <BoxInput \n                            btnDescription = \"Adicionar\"\n                            buttonType = \"btn-success\"\n                            handleForm = {this.handle}\n                            description = \"Adicionar CPF/CNPJ\"\n                            placeholderDescription = \"Informe um CPF/CNPJ para cadastro\"\n                            errorMsg = {errorAdd}\n                         />\n                    </div>\n                    {/* <div className=\"col-6\">\n                        <form onSubmit={ this.handle }>\n                            <div className=\"my-3 p-3 bg-white rounded shadow-sm\">\n                                <h6 className=\"border-bottom border-gray pb-2 mb-0\">Adicionar CPF/CNPJ</h6>\n                                <span className=\"d-block text-right mt-3\">\n                                    <input className=\"form-control form-control-sm\" maxLength={50} type=\"text\" name=\"title\" placeholder=\"Informe um CPF/CNPJ para cadastro\" />\n                                </span>\n                                <div className=\"pt-2 text-right\">\n                                    <button type=\"submit\" className=\"btn btn-success btn-sm\" >Adicionar</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"col-6\">\n                        <form onSubmit={ this.handle }>\n                            <div className=\"my-3 p-3 bg-white rounded shadow-sm\">\n                                <h6 className=\"border-bottom border-gray pb-2 mb-0\">Pesquisar CPF/CNPJ</h6>\n                                <span className=\"d-block text-right mt-3\">\n                                    <input className=\"form-control form-control-sm\" maxLength={50} type=\"text\" name=\"title\" placeholder=\"Informe um CPF ou CNPJ para pesquisar\" />\n                                </span>\n                                <div className=\"pt-2 text-right\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-sm\" >Pesquisar</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div> */}\n                </div>\n    }\n}\n\nexport default BoxNewItem;"]},"metadata":{},"sourceType":"module"}