{"ast":null,"code":"import _regeneratorRuntime from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/src/components/style/BoxNewItem.js\";\nimport React, { Component } from 'react';\nimport { PostData } from '../../services/Methods/API';\nimport serializeForm from 'form-serialize';\nimport { BoxInput } from './BoxInput';\n\nvar BoxNewItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BoxNewItem, _Component);\n\n  function BoxNewItem() {\n    var _this;\n\n    _classCallCheck(this, BoxNewItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BoxNewItem).call(this));\n\n    _this.handleError = function (errors, type) {\n      var details = \"\";\n\n      if (typeof errors.cpf !== \"undefined\") {\n        details = errors.cpf.join(\" / \");\n      }\n\n      if (typeof errors.cnpj !== \"undefined\") {\n        details = errors.cnpj.join(\"/\");\n      }\n\n      if (type === \"add\") {\n        _this.setState({\n          errorAdd: details\n        });\n\n        return;\n      }\n\n      _this.setState({\n        errorSearch: details\n      });\n    };\n\n    _this.handle =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var formData, save;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                formData = serializeForm(event.target, {\n                  hash: true\n                });\n\n                if (!(formData.document.length !== 11 && formData.document.length !== 14)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _this.setState({\n                  errorAdd: \"O cadastro requer um número com 11 ou 14 digitos.\"\n                });\n\n                return _context.abrupt(\"return\");\n\n              case 5:\n                if (formData.document.length === 11) {\n                  formData.cpf = formData.document;\n                }\n\n                if (formData.document.length === 14) {\n                  formData.cnpj = formData.document;\n                }\n\n                _context.next = 9;\n                return PostData(formData);\n\n              case 9:\n                save = _context.sent;\n\n                if (!(save.status === \"success\")) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _this.props.newItem(save.data);\n\n                return _context.abrupt(\"return\");\n\n              case 13:\n                if (save.status === \"fail\") {\n                  _this.handleError(save.data, \"add\");\n                }\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleSearch =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var formData, save;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                formData = serializeForm(event.target, {\n                  hash: true\n                });\n\n                if (!(formData.document.length !== 11 && formData.document.length !== 14)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _this.setState({\n                  errorAdd: \"O cadastro requer um número com 11 ou 14 digitos.\"\n                });\n\n                return _context2.abrupt(\"return\");\n\n              case 5:\n                if (formData.document.length === 11) {\n                  formData.cpf = formData.document;\n                }\n\n                if (formData.document.length === 14) {\n                  formData.cnpj = formData.document;\n                }\n\n                _context2.next = 9;\n                return PostData(formData);\n\n              case 9:\n                save = _context2.sent;\n\n                if (!(save.status === \"success\")) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _this.props.newItem(save.data);\n\n                return _context2.abrupt(\"return\");\n\n              case 13:\n                if (save.status === \"fail\") {\n                  _this.handleError(save.data, \"add\");\n                }\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      list: [],\n      errorAdd: \"\",\n      errorSearch: \"\",\n      countAdd: \"\",\n      countSearch: \"\"\n    };\n    _this.handle = _this.handle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BoxNewItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          errorAdd = _this$state.errorAdd,\n          countAdd = _this$state.countAdd,\n          errorSearch = _this$state.errorSearch,\n          countSearch = _this$state.countSearch;\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(BoxInput, {\n        btnDescription: \"Adicionar\",\n        countInput: function countInput(input) {\n          if (input.target.value.length > 0) {\n            _this2.setState({\n              countAdd: \" / (\".concat(input.target.value.length, \")\")\n            });\n          } else {\n            _this2.setState({\n              countAdd: \"\"\n            });\n          }\n        },\n        showInput: countAdd,\n        buttonType: \"btn-success\",\n        handleForm: this.handle,\n        description: \"Adicionar CPF/CNPJ\",\n        placeholderDescription: \"Informe um CPF/CNPJ para cadastro\",\n        errorMsg: errorAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(BoxInput, {\n        btnDescription: \"Pesquisar\",\n        countInput: function countInput(input) {\n          if (input.target.value.length > 0) {\n            _this2.setState({\n              countSearch: \" / (\".concat(input.target.value.length, \")\")\n            });\n          } else {\n            _this2.setState({\n              countSearch: \"\"\n            });\n          }\n        },\n        showInput: countSearch,\n        buttonType: \"btn-primary\",\n        handleForm: this.handleSearch,\n        description: \"Pesquisar CPF/CNPJ\",\n        placeholderDescription: \"Informe um CPF ou CNPJ para pesquisar\",\n        errorMsg: errorSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BoxNewItem;\n}(Component);\n\nexport default BoxNewItem;","map":{"version":3,"sources":["/Users/paulohenriquepachecobotelho/Dev/teste-backend-neo/frontend/src/components/style/BoxNewItem.js"],"names":["React","Component","PostData","serializeForm","BoxInput","BoxNewItem","handleError","errors","type","details","cpf","join","cnpj","setState","errorAdd","errorSearch","handle","event","preventDefault","formData","target","hash","document","length","save","status","props","newItem","data","handleSearch","state","list","countAdd","countSearch","bind","input","value"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport { PostData } from '../../services/Methods/API';\nimport serializeForm from 'form-serialize';\nimport { BoxInput } from './BoxInput';\n\nclass BoxNewItem extends Component {\n    constructor() {\n      super();\n      this.state = {\n        list:[],\n        errorAdd: \"\",\n        errorSearch: \"\",\n        countAdd: \"\",\n        countSearch: \"\",\n      }\n\n      this.handle = this.handle.bind(this);\n    }\n\n    handleError = (errors, type) => {\n        let details = \"\";\n\n        if (typeof errors.cpf !== \"undefined\") {\n            details = errors.cpf.join(\" / \");\n        }\n\n        if (typeof errors.cnpj !== \"undefined\") {\n            details = errors.cnpj.join(\"/\");\n        }\n\n        if (type === \"add\") {\n            this.setState({errorAdd: details})\n            return ;\n        }\n\n        this.setState({errorSearch: details})    \n    }\n    \n    handle = async (event) => {\n        event.preventDefault();\n        const formData = serializeForm(event.target, { hash: true })\n\n        if (formData.document.length !== 11 && formData.document.length !== 14) {\n            this.setState({errorAdd: \"O cadastro requer um número com 11 ou 14 digitos.\"})\n            return ;\n        }\n\n        if (formData.document.length === 11) {\n            formData.cpf = formData.document;\n        }\n\n        if (formData.document.length === 14) {\n            formData.cnpj = formData.document;\n        }\n\n        const save = await PostData(formData);\n    \n        if (save.status===\"success\") {\n            this.props.newItem(save.data)\n\n            return ;\n        }\n\n        if (save.status===\"fail\") {\n            this.handleError(save.data, \"add\");\n        }\n    }\n\n    handleSearch = async (event) => {\n        event.preventDefault();\n        const formData = serializeForm(event.target, { hash: true })\n\n        if (formData.document.length !== 11 && formData.document.length !== 14) {\n            this.setState({errorAdd: \"O cadastro requer um número com 11 ou 14 digitos.\"})\n            return ;\n        }\n\n        if (formData.document.length === 11) {\n            formData.cpf = formData.document;\n        }\n\n        if (formData.document.length === 14) {\n            formData.cnpj = formData.document;\n        }\n\n        const save = await PostData(formData);\n    \n        if (save.status===\"success\") {\n            this.props.newItem(save.data)\n\n            return ;\n        }\n\n        if (save.status===\"fail\") {\n            this.handleError(save.data, \"add\");\n        }\n    }\n\n    render() {\n        const { errorAdd, countAdd, errorSearch, countSearch } = this.state\n\n        return <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <BoxInput \n                            btnDescription = \"Adicionar\"\n                            countInput = {(input)=>{\n                                if (input.target.value.length>0) {\n                                    this.setState({countAdd: ` / (${input.target.value.length})`})\n                                } else {\n                                    this.setState({countAdd: ``})\n                                }\n                            }}\n                            showInput = {countAdd}\n                            buttonType = \"btn-success\"\n                            handleForm = {this.handle}\n                            description = \"Adicionar CPF/CNPJ\"\n                            placeholderDescription = \"Informe um CPF/CNPJ para cadastro\"\n                            errorMsg = {errorAdd}\n                         />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <BoxInput \n                            btnDescription = \"Pesquisar\"\n                            countInput = {(input)=>{\n                                if (input.target.value.length>0) {\n                                    this.setState({countSearch: ` / (${input.target.value.length})`})\n                                } else {\n                                    this.setState({countSearch: ``})\n                                }\n                            }}\n                            showInput = {countSearch}\n                            buttonType = \"btn-primary\"\n                            handleForm = {this.handleSearch}\n                            description = \"Pesquisar CPF/CNPJ\"\n                            placeholderDescription = \"Informe um CPF ou CNPJ para pesquisar\"\n                            errorMsg = {errorSearch}\n                         />\n                    </div>\n                </div>\n    }\n}\n\nexport default BoxNewItem;"]},"metadata":{},"sourceType":"module"}